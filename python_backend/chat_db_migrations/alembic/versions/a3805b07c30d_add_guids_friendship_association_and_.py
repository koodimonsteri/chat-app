"""add guids, friendship association and friendrequest

Revision ID: a3805b07c30d
Revises: 7b1bd4409e92
Create Date: 2025-01-24 14:49:02.928669

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a3805b07c30d'
down_revision: Union[str, None] = '7b1bd4409e92'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"")
    
    op.create_table('friend_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', name='friendshipstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    op.create_table('friendships',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'friend_id')
    )
    op.add_column('chats', sa.Column('guid', sa.UUID(), nullable=True))
    op.execute("UPDATE chats SET guid = uuid_generate_v4() WHERE guid IS NULL")
    op.create_unique_constraint('uq_chats_guid', 'chats', ['guid'])
    op.alter_column('chats', 'guid', nullable=False)

    op.add_column('messages', sa.Column('guid', sa.UUID(), nullable=True))
    op.execute("UPDATE messages SET guid = uuid_generate_v4() WHERE guid IS NULL")
    op.create_unique_constraint('uq_messages_guid', 'messages', ['guid'])
    op.alter_column('messages', 'guid', nullable=False)

    op.add_column('users', sa.Column('guid', sa.UUID(), nullable=True))
    op.execute("UPDATE users SET guid = uuid_generate_v4() WHERE guid IS NULL")
    op.create_unique_constraint('uq_users_guid', 'users', ['guid'])
    op.alter_column('users', 'guid', nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_users_guid', 'users', type_='unique')
    op.drop_column('users', 'guid')
    op.drop_constraint('uq_messages_guid', 'messages', type_='unique')
    op.drop_column('messages', 'guid')
    op.drop_constraint('uq_chats_guid', 'chats', type_='unique')
    op.drop_column('chats', 'guid')

    op.execute("DROP TYPE IF EXISTS friendshipstatus")
    
    op.drop_table('friendships')
    op.drop_table('friend_requests')
    # ### end Alembic commands ###
