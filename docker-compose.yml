version: '3.8'

services:

  chat_db:
    image: mysql:8.0
    container_name: chat_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - chat_db_data:/var/lib/mysql
    networks:
      - chat_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: chat_backend
    volumes:
      - ./backend/app:/var/www/html
      - tmp_volume:/tmp # to persist the .setup_done
      #- ./backend/config/jwt:/var/www/html/config/jwt
    working_dir: /var/www/html
    ports:
      - "8000:8000" # api
      - "9090:9090" # websocket
    networks:
      - chat_network
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - APP_ENV=dev
    depends_on:
      - chat_db
    #command: php-fpm

  frontend:
    container_name: chat_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/app:/app
      - /app/node_modules
    networks:
      - chat_network
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false
      - WDS_SOCKET_PORT=3000
    depends_on:
      - backend
    #deploy:
    #  resources:
    #    limits:
    #      memory: 2g
    #    reservations:
    #      memory: 1g

networks:
  chat_network:
    driver: bridge

volumes:
  chat_db_data:
  tmp_volume: