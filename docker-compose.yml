version: '3.8'

services:

  postgres_db: # This has to match to DB_HOST in .env!!
    image: postgres:15
    container_name: postgres_chat_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

      # This POSTGRES_DB creates the database automatically!!
      POSTGRES_DB: chat_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat_network

  python_backend:
    build: 
      context: ./python_backend
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: chat_backend_python
    volumes:
      - ./python_backend/app:/app
      #- ./python_backend/chat_db_migrations:/chat_db_migrations
      - jwt_keys:/etc/keys/jwt
      - tmp_volume:/tmp # to persist the .setup_done
    ports:
      - "8000:8000" # api
      #- "8080:8080" # websocket
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    networks:
      - chat_network
    depends_on:
      - postgres_db

  frontend:
    container_name: chat_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/app:/app
      - /app/node_modules
    networks:
      - chat_network
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false
      - WDS_SOCKET_PORT=3000
    depends_on:
      - python_backend
    #deploy:
    #  resources:
    #    limits:
    #      memory: 2g
    #    reservations:
    #      memory: 1g

networks:
  chat_network:
    driver: bridge

volumes:
  postgres_data:
  jwt_keys:
  tmp_volume: